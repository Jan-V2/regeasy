// Generated from Regeasy.g4 by ANTLR 4.5.1
// jshint ignore: start
var antlr4 = require('antlr4/index');


var serializedATN = ["\u0003\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\u0002\u0012\u0083\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0003\u0002\u0003\u0002\u0003\u0002\u0003",
    "\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003",
    "\u0007\u0003\u0007\u0003\b\u0003\b\u0007\b=\n\b\f\b\u000e\b@\u000b\b",
    "\u0003\b\u0003\b\u0003\t\u0003\t\u0006\tF\n\t\r\t\u000e\tG\u0003\t\u0003",
    "\t\u0003\n\u0006\nM\n\n\r\n\u000e\nN\u0003\n\u0003\n\u0003\u000b\u0006",
    "\u000bT\n\u000b\r\u000b\u000e\u000bU\u0003\f\u0003\f\u0003\f\u0005\f",
    "[\n\f\u0003\r\u0006\r^\n\r\r\r\u000e\r_\u0003\u000e\u0003\u000e\u0003",
    "\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003",
    "\u000e\u0005\u000ek\n\u000e\u0003\u000f\u0003\u000f\u0003\u000f\u0003",
    "\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0005\u000fu",
    "\n\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010",
    "\u0005\u0010|\n\u0010\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011",
    "\u0005\u0011\u0082\n\u0011\u0004>G\u0002\u0012\u0003\u0003\u0005\u0004",
    "\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015",
    "\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012\u0003",
    "\u0002\u0006\u0004\u0002$$))\u0004\u0002\u000b\u000b\"\"\u0004\u0002",
    "\f\f\u000f\u000f\u0003\u00022;\u008c\u0002\u0003\u0003\u0002\u0002\u0002",
    "\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002",
    "\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002",
    "\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002",
    "\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002",
    "\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002",
    "\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002",
    "\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002",
    "\u0002!\u0003\u0002\u0002\u0002\u0003#\u0003\u0002\u0002\u0002\u0005",
    ")\u0003\u0002\u0002\u0002\u00072\u0003\u0002\u0002\u0002\t4\u0003\u0002",
    "\u0002\u0002\u000b6\u0003\u0002\u0002\u0002\r8\u0003\u0002\u0002\u0002",
    "\u000f:\u0003\u0002\u0002\u0002\u0011C\u0003\u0002\u0002\u0002\u0013",
    "L\u0003\u0002\u0002\u0002\u0015S\u0003\u0002\u0002\u0002\u0017Z\u0003",
    "\u0002\u0002\u0002\u0019]\u0003\u0002\u0002\u0002\u001bj\u0003\u0002",
    "\u0002\u0002\u001dt\u0003\u0002\u0002\u0002\u001f{\u0003\u0002\u0002",
    "\u0002!\u0081\u0003\u0002\u0002\u0002#$\u0007i\u0002\u0002$%\u0007t",
    "\u0002\u0002%&\u0007q\u0002\u0002&\'\u0007w\u0002\u0002\'(\u0007r\u0002",
    "\u0002(\u0004\u0003\u0002\u0002\u0002)*\u0007g\u0002\u0002*+\u0007p",
    "\u0002\u0002+,\u0007f\u0002\u0002,-\u0007i\u0002\u0002-.\u0007t\u0002",
    "\u0002./\u0007q\u0002\u0002/0\u0007w\u0002\u000201\u0007r\u0002\u0002",
    "1\u0006\u0003\u0002\u0002\u000223\u0007*\u0002\u00023\b\u0003\u0002",
    "\u0002\u000245\u0007+\u0002\u00025\n\u0003\u0002\u0002\u000267\u0007",
    "]\u0002\u00027\f\u0003\u0002\u0002\u000289\u0007_\u0002\u00029\u000e",
    "\u0003\u0002\u0002\u0002:>\t\u0002\u0002\u0002;=\u000b\u0002\u0002\u0002",
    "<;\u0003\u0002\u0002\u0002=@\u0003\u0002\u0002\u0002>?\u0003\u0002\u0002",
    "\u0002><\u0003\u0002\u0002\u0002?A\u0003\u0002\u0002\u0002@>\u0003\u0002",
    "\u0002\u0002AB\t\u0002\u0002\u0002B\u0010\u0003\u0002\u0002\u0002CE",
    "\u00071\u0002\u0002DF\u000b\u0002\u0002\u0002ED\u0003\u0002\u0002\u0002",
    "FG\u0003\u0002\u0002\u0002GH\u0003\u0002\u0002\u0002GE\u0003\u0002\u0002",
    "\u0002HI\u0003\u0002\u0002\u0002IJ\u00071\u0002\u0002J\u0012\u0003\u0002",
    "\u0002\u0002KM\t\u0003\u0002\u0002LK\u0003\u0002\u0002\u0002MN\u0003",
    "\u0002\u0002\u0002NL\u0003\u0002\u0002\u0002NO\u0003\u0002\u0002\u0002",
    "OP\u0003\u0002\u0002\u0002PQ\b\n\u0002\u0002Q\u0014\u0003\u0002\u0002",
    "\u0002RT\t\u0004\u0002\u0002SR\u0003\u0002\u0002\u0002TU\u0003\u0002",
    "\u0002\u0002US\u0003\u0002\u0002\u0002UV\u0003\u0002\u0002\u0002V\u0016",
    "\u0003\u0002\u0002\u0002W[\u0007~\u0002\u0002XY\u0007q\u0002\u0002Y",
    "[\u0007t\u0002\u0002ZW\u0003\u0002\u0002\u0002ZX\u0003\u0002\u0002\u0002",
    "[\u0018\u0003\u0002\u0002\u0002\\^\t\u0005\u0002\u0002]\\\u0003\u0002",
    "\u0002\u0002^_\u0003\u0002\u0002\u0002_]\u0003\u0002\u0002\u0002_`\u0003",
    "\u0002\u0002\u0002`\u001a\u0003\u0002\u0002\u0002ab\u0007v\u0002\u0002",
    "bc\u0007j\u0002\u0002cd\u0007g\u0002\u0002dk\u0007p\u0002\u0002ef\u0007",
    "h\u0002\u0002fg\u0007k\u0002\u0002gh\u0007t\u0002\u0002hi\u0007u\u0002",
    "\u0002ik\u0007v\u0002\u0002ja\u0003\u0002\u0002\u0002je\u0003\u0002",
    "\u0002\u0002k\u001c\u0003\u0002\u0002\u0002lu\u0007/\u0002\u0002mn\u0007",
    "v\u0002\u0002no\u0007j\u0002\u0002op\u0007t\u0002\u0002pq\u0007q\u0002",
    "\u0002qr\u0007w\u0002\u0002rs\u0007i\u0002\u0002su\u0007j\u0002\u0002",
    "tl\u0003\u0002\u0002\u0002tm\u0003\u0002\u0002\u0002u\u001e\u0003\u0002",
    "\u0002\u0002v|\u0007-\u0002\u0002wx\u0007u\u0002\u0002xy\u0007q\u0002",
    "\u0002yz\u0007o\u0002\u0002z|\u0007g\u0002\u0002{v\u0003\u0002\u0002",
    "\u0002{w\u0003\u0002\u0002\u0002| \u0003\u0002\u0002\u0002}\u0082\u0007",
    ",\u0002\u0002~\u007f\u0007c\u0002\u0002\u007f\u0080\u0007p\u0002\u0002",
    "\u0080\u0082\u0007{\u0002\u0002\u0081}\u0003\u0002\u0002\u0002\u0081",
    "~\u0003\u0002\u0002\u0002\u0082\"\u0003\u0002\u0002\u0002\r\u0002>G",
    "NUZ_jt{\u0081\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function RegeasyLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

RegeasyLexer.prototype = Object.create(antlr4.Lexer.prototype);
RegeasyLexer.prototype.constructor = RegeasyLexer;

RegeasyLexer.EOF = antlr4.Token.EOF;
RegeasyLexer.T__0 = 1;
RegeasyLexer.T__1 = 2;
RegeasyLexer.T__2 = 3;
RegeasyLexer.T__3 = 4;
RegeasyLexer.T__4 = 5;
RegeasyLexer.T__5 = 6;
RegeasyLexer.STRING = 7;
RegeasyLexer.REGEX = 8;
RegeasyLexer.SKIP_WS = 9;
RegeasyLexer.NL = 10;
RegeasyLexer.OR = 11;
RegeasyLexer.INT = 12;
RegeasyLexer.THEN = 13;
RegeasyLexer.THROUGH = 14;
RegeasyLexer.SOME = 15;
RegeasyLexer.ANY = 16;


RegeasyLexer.modeNames = [ "DEFAULT_MODE" ];

RegeasyLexer.literalNames = [ 'null', "'group'", "'endgroup'", "'('", "')'", 
                              "'['", "']'" ];

RegeasyLexer.symbolicNames = [ 'null', 'null', 'null', 'null', 'null', 'null', 
                               'null', "STRING", "REGEX", "SKIP_WS", "NL", 
                               "OR", "INT", "THEN", "THROUGH", "SOME", "ANY" ];

RegeasyLexer.ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", 
                           "STRING", "REGEX", "SKIP_WS", "NL", "OR", "INT", 
                           "THEN", "THROUGH", "SOME", "ANY" ];

RegeasyLexer.grammarFileName = "Regeasy.g4";



exports.RegeasyLexer = RegeasyLexer;

